# Generated by Django 3.1 on 2021-08-15 12:05

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.RunSQL(
            sql="CREATE SCHEMA content",
            reverse_sql="DROP SCHEMA content",
        ),
        migrations.CreateModel(
            name='Certificate',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=60, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'age qualification',
                'verbose_name_plural': 'age qualifications',
                'db_table': 'content"."certificates',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'genre',
                'verbose_name_plural': 'genres',
                'db_table': 'content"."genres',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('imdb_identifier', models.CharField(blank=True, max_length=255, verbose_name='IMDB identifier')),
                ('creation_date', models.DateField(blank=True, null=True, verbose_name='movie creation date ')),
                ('file_path', models.FileField(blank=True, upload_to='movies/', verbose_name='file')),
                ('rating', models.FloatField(blank=True, default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='rating')),
            ],
            options={
                'verbose_name': 'film work',
                'verbose_name_plural': 'film works',
                'db_table': 'content"."movies',
            },
        ),
        migrations.CreateModel(
            name='MovieGenre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
            ],
            options={
                'verbose_name': 'film genre',
                'verbose_name_plural': 'film genres',
                'db_table': 'content"."movie_genre',
            },
        ),
        migrations.CreateModel(
            name='MoviePersonRole',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date of creation')),
            ],
            options={
                'verbose_name': 'film person',
                'verbose_name_plural': 'film persons',
                'db_table': 'content"."movie_person_role',
            },
        ),
        migrations.CreateModel(
            name='MovieType',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
            options={
                'verbose_name': 'type of film',
                'verbose_name_plural': 'types of film',
                'db_table': 'content"."movie_types',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=255, verbose_name='full name')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='date of birth ')),
                ('gender', models.TextField(choices=[('male', 'male gender '), ('female', 'female gender ')], null=True, verbose_name='gender')),
            ],
            options={
                'verbose_name': 'person',
                'verbose_name_plural': 'persons',
                'db_table': 'content"."persons',
            },
        ),
        migrations.CreateModel(
            name='PersonRole',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'role',
                'verbose_name_plural': 'roles',
                'db_table': 'content"."person_roles',
            },
        ),
        migrations.AddConstraint(
            model_name='personrole',
            constraint=models.UniqueConstraint(fields=('name',), name='person_roles_name_uidx'),
        ),
        migrations.AddField(
            model_name='person',
            name='movies',
            field=models.ManyToManyField(blank=True, through='movies.MoviePersonRole', to='movies.Movie', verbose_name='person film'),
        ),
        migrations.AddConstraint(
            model_name='movietype',
            constraint=models.UniqueConstraint(fields=('name',), name='movie_types_name_uidx'),
        ),
        migrations.AddField(
            model_name='moviepersonrole',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie'),
        ),
        migrations.AddField(
            model_name='moviepersonrole',
            name='person',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.person'),
        ),
        migrations.AddField(
            model_name='moviepersonrole',
            name='person_role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.personrole'),
        ),
        migrations.AddField(
            model_name='moviegenre',
            name='genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.genre'),
        ),
        migrations.AddField(
            model_name='moviegenre',
            name='movie',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.movie'),
        ),
        migrations.AddField(
            model_name='movie',
            name='certificate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movies', to='movies.certificate', verbose_name='age qualification'),
        ),
        migrations.AddField(
            model_name='movie',
            name='genres',
            field=models.ManyToManyField(through='movies.MovieGenre', to='movies.Genre'),
        ),
        migrations.AddField(
            model_name='movie',
            name='person_roles',
            field=models.ManyToManyField(through='movies.MoviePersonRole', to='movies.PersonRole'),
        ),
        migrations.AddField(
            model_name='movie',
            name='persons',
            field=models.ManyToManyField(blank=True, through='movies.MoviePersonRole', to='movies.Person', verbose_name='film person'),
        ),
        migrations.AddField(
            model_name='movie',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movies', to='movies.movietype', verbose_name='type of film'),
        ),
        migrations.AddField(
            model_name='genre',
            name='movies',
            field=models.ManyToManyField(blank=True, through='movies.MovieGenre', to='movies.Movie', verbose_name='genre film'),
        ),
        migrations.AddConstraint(
            model_name='certificate',
            constraint=models.UniqueConstraint(fields=('name',), name='certificates_name_uidx'),
        ),
        migrations.AddConstraint(
            model_name='moviepersonrole',
            constraint=models.UniqueConstraint(fields=('movie_id', 'person_id', 'person_role_id'), name='movie_person_role_main_uidx'),
        ),
        migrations.AddConstraint(
            model_name='moviegenre',
            constraint=models.UniqueConstraint(fields=('movie_id', 'genre_id'), name='movie_genre_main_uidx'),
        ),
        migrations.AddConstraint(
            model_name='genre',
            constraint=models.UniqueConstraint(fields=('name',), name='genres_name_uidx'),
        ),
    ]
